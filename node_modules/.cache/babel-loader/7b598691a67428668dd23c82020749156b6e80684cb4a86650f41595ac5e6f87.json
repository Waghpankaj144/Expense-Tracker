{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Modern-ReactJS-main\\\\Modern-ReactJS-main\\\\expense-tracker-app\\\\src\\\\components\\\\ExpenseTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Expense from './Expense';\nimport TransactionHistory from './TransactionHistory';\nimport TransactionForm from './TransactionForm';\nimport { uniqueId } from '../utils';\n\n// Aggregator component/container component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactionData = [];\nfunction ExpenseTracker() {\n  _s();\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const saveState = () => {\n    localStorage.setItem('expenseTrackerState', JSON.stringify(transactions));\n  };\n  const calculateExpenses = () => {\n    let income = 0,\n      expense = 0;\n    transactions.forEach(data => {\n      if (data.type === 'income') {\n        income += data.amount;\n      } else if (data.type === 'expense') {\n        expense += data.amount;\n      }\n    });\n    saveState();\n    setIncome(income);\n    setExpense(expense);\n  };\n  const handleAddNewTransaction = item => {\n    let newTransactions = [...transactions, item];\n    setTransactions(newTransactions);\n  };\n  const handleDeleteTransaction = id => {\n    const newTransactions = transactions.filter(item => item.id != id);\n    setTransactions(newTransactions);\n  };\n  useEffect(() => {\n    let localState = JSON.parse(localStorage.getItem('expenseTrackerState'));\n    if (localState) {\n      setTransactions(localState);\n    } else {\n      calculateExpenses();\n    }\n  }, []);\n  useEffect(() => {\n    calculateExpenses();\n  }, [transactions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Expense, {\n      income: income,\n      expense: expense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      transactions: transactions,\n      onDeleteTransaction: handleDeleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onNewTransaction: handleAddNewTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseTracker, \"r3nEtLyunbUJHMcbREVPOLxhyx0=\");\n_c = ExpenseTracker;\nexport default ExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","Expense","TransactionHistory","TransactionForm","uniqueId","jsxDEV","_jsxDEV","transactionData","ExpenseTracker","_s","income","setIncome","expense","setExpense","transactions","setTransactions","saveState","localStorage","setItem","JSON","stringify","calculateExpenses","forEach","data","type","amount","handleAddNewTransaction","item","newTransactions","handleDeleteTransaction","id","filter","localState","parse","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteTransaction","onNewTransaction","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Modern-ReactJS-main/Modern-ReactJS-main/expense-tracker-app/src/components/ExpenseTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Expense from './Expense';\nimport TransactionHistory from './TransactionHistory';\nimport TransactionForm from './TransactionForm';\n\nimport { uniqueId } from '../utils';\n\n// Aggregator component/container component\n\nconst transactionData = [\n   \n];\n\nfunction ExpenseTracker() {\n\n    const [income, setIncome] = useState(0);\n    const [expense, setExpense] = useState(0);\n    const [transactions, setTransactions] = useState([]);\n    \n    const saveState = () => {\n        localStorage.setItem('expenseTrackerState', \n            JSON.stringify(transactions));\n    }\n\n    const calculateExpenses = () => {\n        let income = 0, expense = 0;\n        \n        transactions.forEach((data) => {\n            if (data.type === 'income') {\n                income += data.amount;\n            } else if (data.type === 'expense') {\n                expense += data.amount;\n            }\n        });\n\n        saveState();\n\n        setIncome(income);\n        setExpense(expense);\n    }\n\n    const handleAddNewTransaction = item => {\n        let newTransactions = [...transactions, item];\n        setTransactions(newTransactions);\n    }\n\n    const handleDeleteTransaction = id => {\n        const newTransactions = transactions.filter((item) => item.id != id);\n        setTransactions(newTransactions);\n    }\n\n    useEffect(() => {\n        let localState = JSON.parse(localStorage.getItem('expenseTrackerState'));\n        if (localState) {\n            setTransactions(localState);\n        } else {\n            calculateExpenses();\n        }\n    }, []);\n\n    useEffect(() => {\n        calculateExpenses();\n    }, [transactions]);\n\n    return (\n        <div>\n            <h1>Expense Tracker</h1>\n            <Expense income={income} expense={expense} />\n            <TransactionHistory transactions={transactions}\n                onDeleteTransaction={handleDeleteTransaction} />\n            <TransactionForm onNewTransaction={handleAddNewTransaction} />\n        </div>\n    )\n}\n\nexport default ExpenseTracker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}